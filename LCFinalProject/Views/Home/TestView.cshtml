@model LCFinalProject.ViewModels.PredictorViewModel

<link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
<link href="~/css/site.css" rel="stylesheet" />
<link href="~/styles/kendo.common.min.css" rel="stylesheet" />
<link href="~/styles/kendo.rtl.min.css" rel="stylesheet" />
<link href="~/styles/kendo.mobile.all.min.css" rel="stylesheet" />
<link href="~/styles/kendo.default.min.css" rel="stylesheet" />
<script src="~/js/js/jquery.min.js"></script>
<script src="~/js/js/jszip.min.js"></script>
<script src="~/js/js/kendo.all.min.js"></script>

<div class="container-fluid">
    <div class="row">
        <div class="col-xs-18 col-md-12">
            <div id="catchers" style="height:550px;"></div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-xs-18 col-md-12">
            <div id="firstbasemen" style="height:550px;"></div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-xs-18 col-md-12">
            <div id="secondbasemen" style="height:550px;"></div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-xs-18 col-md-12">
            <div id="thirdbasemen" style="height:550px;"></div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-xs-18 col-md-12">
            <div id="shortstops" style="height:550px;"></div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-xs-18 col-md-12">
            <div id="outfielders" style="height:550px;"></div>
        </div>
    </div>
</div>

<script>
    function catcherData() {
        var data = new Array();


        @foreach (var player in Model.Catchers)
        {
            var playerName = player.FirstName + " " + player.LastName;

            @:data.push({ Name: "@playerName", Team: "@player.TeamName", YesterdayScore: "@player.YesterdayTotalScore", LastFiveGames: "@player.LastFiveTotalScore", AwayGames: "@player.AwayTotalScore", AwayPPA: "@player.AwayScorePerAB", HomeGames: "@player.HomeTotalScore", HomePPA: "@player.HomeScorePerAB", VersusLHP: "@player.VsLhpTotalScore", LhpPPA: "@player.VsLhpScorePerAB",  VersusRHP: "@player.VsLhpTotalScore", RhpPPA: "@player.VsRhpScorePerAB" });

        }

        return data;
    }

    $(function () {
        $("#responsive-panel").kendoResponsivePanel({
            breakpoint: 768,
            autoClose: false,
            orientation: "top"
        });

        $("#menu").kendoMenu();
        $(".textButton").kendoButton();

        $("#catchers").kendoGrid({
            columns: [{
                title: "Name",
                field: "Name",
                filterable: false,
                encoded: true
            }, {
                title: "Team",
                field: "Team",
                encoded: true
            }, {
                title: "Yesterday Score",
                field: "YesterdayScore",
                encoded: true
            }, {
                title: "Last Five Games",
                field: "LastFiveGames",
                encoded: true
            }, {
                title: "Away Games",
                field: "AwayGames",
                encoded: true
            },  {
                title: "Away PPA",
                field: "AwayPPA",
                encoded: true
            },{
                title: "Home Games",
                field: "HomeGames",
                encoded: true
            }, {
                title: "Home PPA",
                field: "HomePPA",
                encoded: true
            }, {
                title: "Versus LHP",
                field: "VersusLHP",
                encoded: true
            }, {
                title: "LHP PPA",
                field: "LhpPPA",
                encoded: true
            }, {
                title: "Versus RHP",
                field: "VersusRHP"
            },  {
                title: "RHP PPA",
                field: "RhpPPA",
                encoded: true
            }],
            pageable: {
                buttonCount: 10
            },
            sortable: true,
            filterable: true,
            messages: {
                noRecords: "No records available."
            },
            dataSource: {
                data: catcherData(),
                pageSize: 20,
                schema: {
                    model: {
                        fields: {
                            Name: {
                                type: "string"
                            },
                            Team: {
                                type: "string"
                            },
                            YesterdayScore: {
                                type: "number"
                            },
                            LastFiveGames: {
                                type: "number",
                                defaultValue: null
                            },
                            AwayGames: {
                                type: "number"
                            },
                            AwayPPA: {
                                type: "decimal"
                            },
                            HomeGames: {
                                type: "number",
                                defaultValue: null
                            },
                            HomePPA: {
                                type: "decimal"

                            },
                            VersusLHP: {
                                type: "number",
                                defaultValue: null
                            },
                            LhpPPA: {
                                type: "decimal"

                            },
                            VersusRHP: {
                                type: "number"
                            },
                            RhpPPA: {
                                type: "decimal"

                            }
                        }
                    }
                }
            }
        });
    });
</script>

<script>
    function firstbaseData() {
        var data = new Array();


        @foreach (var player in Model.FirstBasemen)
        {
            var playerName = player.FirstName + " " + player.LastName;

             @:data.push({ Name: "@playerName", Team: "@player.TeamName", YesterdayScore: "@player.YesterdayTotalScore", LastFiveGames: "@player.LastFiveTotalScore", AwayGames: "@player.AwayTotalScore", AwayPPA: "@player.AwayScorePerAB", HomeGames: "@player.HomeTotalScore", HomePPA: "@player.HomeScorePerAB", VersusLHP: "@player.VsLhpTotalScore", LhpPPA: "@player.VsLhpScorePerAB",  VersusRHP: "@player.VsLhpTotalScore", RhpPPA: "@player.VsRhpScorePerAB" }); 
        }

        return data;
    }

    $(function () {
        $("#responsive-panel").kendoResponsivePanel({
            breakpoint: 768,
            autoClose: false,
            orientation: "top"
        });

        $("#menu").kendoMenu();
        $(".textButton").kendoButton();

        $("#firstbasemen").kendoGrid({
            columns: [{
                title: "Name",
                field: "Name",
                filterable: false,
                encoded: true
            }, {
                title: "Team",
                field: "Team",
                encoded: true
            }, {
                title: "Yesterday Score",
                field: "YesterdayScore",
                encoded: true
            }, {
                title: "Last Five Games",
                field: "LastFiveGames",
                encoded: true
            }, {
                title: "Away Games",
                field: "AwayGames",
                encoded: true
            }, {
                title: "Away PPA",
                field: "AwayPPA",
                encoded: true
            }, {
                title: "Home Games",
                field: "HomeGames",
                encoded: true
            }, {
                title: "Home PPA",
                field: "HomePPA",
                encoded: true
            }, {
                title: "Versus LHP",
                field: "VersusLHP",
                encoded: true
            }, {
                title: "LHP PPA",
                field: "LhpPPA",
                encoded: true
            }, {
                title: "Versus RHP",
                field: "VersusRHP"
            }, {
                title: "RHP PPA",
                field: "RhpPPA",
                encoded: true
            }],
            pageable: {
                buttonCount: 10
            },
            sortable: true,
            filterable: true,
            messages: {
                noRecords: "No records available."
            },
            dataSource: {
                data: firstbaseData(),
                pageSize: 20,
                schema: {
                    model: {
                        fields: {
                            Name: {
                                type: "string"
                            },
                            Team: {
                                type: "string"
                            },
                            YesterdayScore: {
                                type: "number"
                            },
                            LastFiveGames: {
                                type: "number",
                                defaultValue: null
                            },
                            AwayGames: {
                                type: "number"
                            },
                            AwayPPA: {
                                type: "decimal"
                            },
                            HomeGames: {
                                type: "number",
                                defaultValue: null
                            },
                            HomePPA: {
                                type: "decimal"

                            },
                            VersusLHP: {
                                type: "number",
                                defaultValue: null
                            },
                            LhpPPA: {
                                type: "decimal"

                            },
                            VersusRHP: {
                                type: "number"
                            },
                            RhpPPA: {
                                type: "decimal"

                            }
                        }
                    }
                }
            }
        });
    });
</script>

<script>
    function secondbaseData() {
        var data = new Array();


        @foreach (var player in Model.SecondBasemen)
        {
            var playerName = player.FirstName + " " + player.LastName;

            @:data.push({ Name: "@playerName", Team: "@player.TeamName", YesterdayScore: "@player.YesterdayTotalScore", LastFiveGames: "@player.LastFiveTotalScore", AwayGames: "@player.AwayTotalScore", AwayPPA: "@player.AwayScorePerAB", HomeGames: "@player.HomeTotalScore", HomePPA: "@player.HomeScorePerAB", VersusLHP: "@player.VsLhpTotalScore", LhpPPA: "@player.VsLhpScorePerAB",  VersusRHP: "@player.VsLhpTotalScore", RhpPPA: "@player.VsRhpScorePerAB" });

        }

        return data;
    }

    $(function () {
        $("#responsive-panel").kendoResponsivePanel({
            breakpoint: 768,
            autoClose: false,
            orientation: "top"
        });

        $("#menu").kendoMenu();
        $(".textButton").kendoButton();

        $("#secondbasemen").kendoGrid({
            columns: [{
                title: "Name",
                field: "Name",
                filterable: false,
                encoded: true
            }, {
                title: "Team",
                field: "Team",
                encoded: true
            }, {
                title: "Yesterday Score",
                field: "YesterdayScore",
                encoded: true
            }, {
                title: "Last Five Games",
                field: "LastFiveGames",
                encoded: true
            }, {
                title: "Away Games",
                field: "AwayGames",
                encoded: true
            }, {
                title: "Away PPA",
                field: "AwayPPA",
                encoded: true
            }, {
                title: "Home Games",
                field: "HomeGames",
                encoded: true
            }, {
                title: "Home PPA",
                field: "HomePPA",
                encoded: true
            }, {
                title: "Versus LHP",
                field: "VersusLHP",
                encoded: true
            }, {
                title: "LHP PPA",
                field: "LhpPPA",
                encoded: true
            }, {
                title: "Versus RHP",
                field: "VersusRHP"
            }, {
                title: "RHP PPA",
                field: "RhpPPA",
                encoded: true
            }],
            pageable: {
                buttonCount: 10
            },
            sortable: true,
            filterable: true,
            messages: {
                noRecords: "No records available."
            },
            dataSource: {
                data: secondbaseData(),
                pageSize: 20,
                schema: {
                    model: {
                        fields: {
                            Name: {
                                type: "string"
                            },
                            Team: {
                                type: "string"
                            },
                            YesterdayScore: {
                                type: "number"
                            },
                            LastFiveGames: {
                                type: "number",
                                defaultValue: null
                            },
                            AwayGames: {
                                type: "number"
                            },
                            AwayPPA: {
                                type: "decimal"
                            },
                            HomeGames: {
                                type: "number",
                                defaultValue: null
                            },
                            HomePPA: {
                                type: "decimal"

                            },
                            VersusLHP: {
                                type: "number",
                                defaultValue: null
                            },
                            LhpPPA: {
                                type: "decimal"

                            },
                            VersusRHP: {
                                type: "number"
                            },
                            RhpPPA: {
                                type: "decimal"

                            }
                        }
                    }
                }
            }
        });
    });
</script>

<script>
    function thirdbaseData() {
        var data = new Array();


        @foreach (var player in Model.ThirdBasemen)
        {
            var playerName = player.FirstName + " " + player.LastName;

             @:data.push({ Name: "@playerName", Team: "@player.TeamName", YesterdayScore: "@player.YesterdayTotalScore", LastFiveGames: "@player.LastFiveTotalScore", AwayGames: "@player.AwayTotalScore", AwayPPA: "@player.AwayScorePerAB", HomeGames: "@player.HomeTotalScore", HomePPA: "@player.HomeScorePerAB", VersusLHP: "@player.VsLhpTotalScore", LhpPPA: "@player.VsLhpScorePerAB",  VersusRHP: "@player.VsLhpTotalScore", RhpPPA: "@player.VsRhpScorePerAB" });

        }

        return data;
    }

    $(function () {
        $("#responsive-panel").kendoResponsivePanel({
            breakpoint: 768,
            autoClose: false,
            orientation: "top"
        });

        $("#menu").kendoMenu();
        $(".textButton").kendoButton();

        $("#thirdbasemen").kendoGrid({
            columns: [{
                title: "Name",
                field: "Name",
                filterable: false,
                encoded: true
            }, {
                title: "Team",
                field: "Team",
                encoded: true
            }, {
                title: "Yesterday Score",
                field: "YesterdayScore",
                encoded: true
            }, {
                title: "Last Five Games",
                field: "LastFiveGames",
                encoded: true
            }, {
                title: "Away Games",
                field: "AwayGames",
                encoded: true
            }, {
                title: "Away PPA",
                field: "AwayPPA",
                encoded: true
            }, {
                title: "Home Games",
                field: "HomeGames",
                encoded: true
            }, {
                title: "Home PPA",
                field: "HomePPA",
                encoded: true
            }, {
                title: "Versus LHP",
                field: "VersusLHP",
                encoded: true
            }, {
                title: "LHP PPA",
                field: "LhpPPA",
                encoded: true
            }, {
                title: "Versus RHP",
                field: "VersusRHP"
            }, {
                title: "RHP PPA",
                field: "RhpPPA",
                encoded: true
            }],
            pageable: {
                buttonCount: 10
            },
            sortable: true,
            filterable: true,
            messages: {
                noRecords: "No records available."
            },
            dataSource: {
                data: thirdbaseData(),
                pageSize: 20,
                schema: {
                    model: {
                        fields: {
                            Name: {
                                type: "string"
                            },
                            Team: {
                                type: "string"
                            },
                            YesterdayScore: {
                                type: "number"
                            },
                            LastFiveGames: {
                                type: "number",
                                defaultValue: null
                            },
                            AwayGames: {
                                type: "number"
                            },
                            AwayPPA: {
                                type: "decimal"
                            },
                            HomeGames: {
                                type: "number",
                                defaultValue: null
                            },
                            HomePPA: {
                                type: "decimal"

                            },
                            VersusLHP: {
                                type: "number",
                                defaultValue: null
                            },
                            LhpPPA: {
                                type: "decimal"

                            },
                            VersusRHP: {
                                type: "number"
                            },
                            RhpPPA: {
                                type: "decimal"

                            }
                        }
                    }
                }
            }
        });
    });
</script>
<script>
    function shortstopData() {
        var data = new Array();


        @foreach (var player in Model.ShortStops)
        {
            var playerName = player.FirstName + " " + player.LastName;

             @:data.push({ Name: "@playerName", Team: "@player.TeamName", YesterdayScore: "@player.YesterdayTotalScore", LastFiveGames: "@player.LastFiveTotalScore", AwayGames: "@player.AwayTotalScore", AwayPPA: "@player.AwayScorePerAB", HomeGames: "@player.HomeTotalScore", HomePPA: "@player.HomeScorePerAB", VersusLHP: "@player.VsLhpTotalScore", LhpPPA: "@player.VsLhpScorePerAB",  VersusRHP: "@player.VsLhpTotalScore", RhpPPA: "@player.VsRhpScorePerAB" });

        }

        return data;
    }

    $(function () {
        $("#responsive-panel").kendoResponsivePanel({
            breakpoint: 768,
            autoClose: false,
            orientation: "top"
        });

        $("#menu").kendoMenu();
        $(".textButton").kendoButton();

        $("#shortstops").kendoGrid({
            columns: [{
                title: "Name",
                field: "Name",
                filterable: false,
                encoded: true
            }, {
                title: "Team",
                field: "Team",
                encoded: true
            }, {
                title: "Yesterday Score",
                field: "YesterdayScore",
                encoded: true
            }, {
                title: "Last Five Games",
                field: "LastFiveGames",
                encoded: true
            }, {
                title: "Away Games",
                field: "AwayGames",
                encoded: true
            }, {
                title: "Away PPA",
                field: "AwayPPA",
                encoded: true
            }, {
                title: "Home Games",
                field: "HomeGames",
                encoded: true
            }, {
                title: "Home PPA",
                field: "HomePPA",
                encoded: true
            }, {
                title: "Versus LHP",
                field: "VersusLHP",
                encoded: true
            }, {
                title: "LHP PPA",
                field: "LhpPPA",
                encoded: true
            }, {
                title: "Versus RHP",
                field: "VersusRHP"
            }, {
                title: "RHP PPA",
                field: "RhpPPA",
                encoded: true
            }],
            pageable: {
                buttonCount: 10
            },
            sortable: true,
            filterable: true,
            messages: {
                noRecords: "No records available."
            },
            dataSource: {
                data: shortstopData(),
                pageSize: 20,
                schema: {
                    model: {
                        fields: {
                            Name: {
                                type: "string"
                            },
                            Team: {
                                type: "string"
                            },
                            YesterdayScore: {
                                type: "number"
                            },
                            LastFiveGames: {
                                type: "number",
                                defaultValue: null
                            },
                            AwayGames: {
                                type: "number"
                            },
                            HomeGames: {
                                type: "number",
                                defaultValue: null
                            },
                            VersusLHP: {
                                type: "number",
                                defaultValue: null
                            },
                            VersusRHP: {
                                type: "number"
                            }
                        }
                    }
                }
            }
        });
    });
</script>
<script>
    function outfielderData() {
        var data = new Array();


        @foreach (var player in Model.Outfielders)
        {
            var playerName = player.FirstName + " " + player.LastName;

             @:data.push({ Name: "@playerName", Team: "@player.TeamName", YesterdayScore: "@player.YesterdayTotalScore", LastFiveGames: "@player.LastFiveTotalScore", AwayGames: "@player.AwayTotalScore", AwayPPA: "@player.AwayScorePerAB", HomeGames: "@player.HomeTotalScore", HomePPA: "@player.HomeScorePerAB", VersusLHP: "@player.VsLhpTotalScore", LhpPPA: "@player.VsLhpScorePerAB",  VersusRHP: "@player.VsLhpTotalScore", RhpPPA: "@player.VsRhpScorePerAB" });

        }

        return data;
    }

    $(function () {
        $("#responsive-panel").kendoResponsivePanel({
            breakpoint: 768,
            autoClose: false,
            orientation: "top"
        });

        $("#menu").kendoMenu();
        $(".textButton").kendoButton();

        $("#outfielders").kendoGrid({
            columns: [{
                title: "Name",
                field: "Name",
                filterable: false,
                encoded: true
            }, {
                title: "Team",
                field: "Team",
                encoded: true
            }, {
                title: "Yesterday Score",
                field: "YesterdayScore",
                encoded: true
            }, {
                title: "Last Five Games",
                field: "LastFiveGames",
                encoded: true
            }, {
                title: "Away Games",
                field: "AwayGames",
                encoded: true
            }, {
                title: "Away PPA",
                field: "AwayPPA",
                encoded: true
            }, {
                title: "Home Games",
                field: "HomeGames",
                encoded: true
            }, {
                title: "Home PPA",
                field: "HomePPA",
                encoded: true
            }, {
                title: "Versus LHP",
                field: "VersusLHP",
                encoded: true
            }, {
                title: "LHP PPA",
                field: "LhpPPA",
                encoded: true
            }, {
                title: "Versus RHP",
                field: "VersusRHP"
            }, {
                title: "RHP PPA",
                field: "RhpPPA",
                encoded: true
            }],
            pageable: {
                buttonCount: 10
            },
            sortable: true,
            filterable: true,
            messages: {
                noRecords: "No records available."
            },
            dataSource: {
                data: outfielderData(),
                pageSize: 20,
                schema: {
                    model: {
                        fields: {
                            Name: {
                                type: "string"
                            },
                            Team: {
                                type: "string"
                            },
                            YesterdayScore: {
                                type: "number"
                            },
                            LastFiveGames: {
                                type: "number",
                                defaultValue: null
                            },
                            AwayGames: {
                                type: "number"
                            },
                            HomeGames: {
                                type: "number",
                                defaultValue: null
                            },
                            VersusLHP: {
                                type: "number",
                                defaultValue: null
                            },
                            VersusRHP: {
                                type: "number"
                            }
                        }
                    }
                }
            }
        });
    });
</script>