
@model LCFinalProject.ViewModels.PredictorViewModel

<section class="bg-primary text-white" id="team">
    <h1 style="text-align:center"> Team Trends </h1>
    <div class="container-fluid">

        <div class="row">
            <div class="col-xs-18 col-md-12">
                <div id="teams"></div>
            </div>
        </div>
    </div>
</section>

<section class="portfolio" id="pitchers">
    <h1 style="text-align:center">Pitchers</h1>
    <div class="container-fluid">

        <div class="row">
            <div class="col-xs-18 col-md-12">
                <div id="pitcher"></div>
            </div>
        </div>
    </div>
</section>


<section class="bg-primary text-white" id="catcher">
    <h1 style="text-align:center"> Catchers </h1>
    <div class="container-fluid">

        <div class="row">
            <div class="col-xs-18 col-md-12">
                <div id="catchers"></div>
            </div>
        </div>
    </div>
</section>

<section class="portfolio" id="firstbase">
    <h1 style="text-align:center"> First Basemen </h1>
    <div class="container-fluid">

        <div class="row">
            <div class="col-xs-18 col-md-12">
                <div id="firstbasemen"></div>
            </div>
        </div>
    </div>
</section>

<section class="bg-primary text-white" id="secondbase">
    <h1 style="text-align:center"> Second Basemen </h1>
    <div class="container-fluid">

        <div class="row">
            <div class="col-xs-18 col-md-12">
                <div id="secondbasemen"></div>
            </div>
        </div>
    </div>
</section>

<section class="portfolio" id="thirdbase">
    <h1 style="text-align:center"> Third Basemen </h1>
    <div class="container-fluid">

        <div class="row">
            <div class="col-xs-18 col-md-12">
                <div id="thirdbasemen"></div>
            </div>
        </div>
    </div>
</section>

<section class="bg-primary text-white" id="shortstop">
    <h1 style="text-align:center">Shortstops</h1>>
    <div class="container-fluid">

        <div class="row">
            <div class="col-xs-18 col-md-12">
                <div id="shortstops"></div>
            </div>
        </div>
    </div>
</section>

<section class="portfolio" id="outfield">
    <h1 style="text-align:center"> Outfielders </h1>
    <div class="container-fluid">

        <div class="row">
            <div class="col-xs-18 col-md-12">
                <div id="outfielders"></div>
            </div>
        </div>
    </div>
</section>


<script>
    function catcherData() {
        var data = new Array();


        @foreach (var player in Model.Catchers)
        {
            var playerName = player.FirstName + " " + player.LastName;

            @:data.push({ Name: "@playerName", Team: "@player.TeamName", YesterdayScore: "@player.YesterdayTotalScore", LastFiveGames: "@player.LastFiveTotalScore", AwayGames: "@player.AwayTotalScore", AwayPPA: "@player.AwayScorePerAB", HomeGames: "@player.HomeTotalScore", HomePPA: "@player.HomeScorePerAB", VersusLHP: "@player.VsLhpTotalScore", LhpPPA: "@player.VsLhpScorePerAB",  VersusRHP: "@player.VsLhpTotalScore", RhpPPA: "@player.VsRhpScorePerAB" });

        }

        return data;
    }

    $(function () {
        $("#responsive-panel").kendoResponsivePanel({
            breakpoint: 768,
            autoClose: false,
            orientation: "top"
        });

        $("#menu").kendoMenu();
        $(".textButton").kendoButton();

        $("#catchers").kendoGrid({
            columns: [{
                title: "Name",
                field: "Name",
                filterable: false,
                encoded: true
            }, {
                title: "Team",
                field: "Team",
                encoded: true
            }, {
                title: "Yesterday Score",
                field: "YesterdayScore",
                encoded: true
            }, {
                title: "Last Five Games",
                field: "LastFiveGames",
                encoded: true
            }, {
                title: "Away Games",
                field: "AwayGames",
                encoded: true
            },  {
                title: "Away PPA",
                field: "AwayPPA",
                encoded: true
            },{
                title: "Home Games",
                field: "HomeGames",
                encoded: true
            }, {
                title: "Home PPA",
                field: "HomePPA",
                encoded: true
            }, {
                title: "Versus LHP",
                field: "VersusLHP",
                encoded: true
            }, {
                title: "LHP PPA",
                field: "LhpPPA",
                encoded: true
            }, {
                title: "Versus RHP",
                field: "VersusRHP"
            },  {
                title: "RHP PPA",
                field: "RhpPPA",
                encoded: true
            }],
            pageable: {
                buttonCount: 10
            },
            sortable: true,
            filterable: true,
            messages: {
                noRecords: "No records available."
            },
            dataSource: {
                data: catcherData(),
                pageSize: 20,
                schema: {
                    model: {
                        fields: {
                            Name: {
                                type: "string"
                            },
                            Team: {
                                type: "string"
                            },
                            YesterdayScore: {
                                type: "number"
                            },
                            LastFiveGames: {
                                type: "number",
                                defaultValue: null
                            },
                            AwayGames: {
                                type: "number"
                            },
                            AwayPPA: {
                                type: "decimal"
                            },
                            HomeGames: {
                                type: "number",
                                defaultValue: null
                            },
                            HomePPA: {
                                type: "decimal"

                            },
                            VersusLHP: {
                                type: "number",
                                defaultValue: null
                            },
                            LhpPPA: {
                                type: "decimal"

                            },
                            VersusRHP: {
                                type: "number"
                            },
                            RhpPPA: {
                                type: "decimal"

                            }
                        }
                    }
                }
            }
        });
    });
</script>

<script>
    function firstbaseData() {
        var data = new Array();


        @foreach (var player in Model.FirstBasemen)
        {
            var playerName = player.FirstName + " " + player.LastName;

             @:data.push({ Name: "@playerName", Team: "@player.TeamName", YesterdayScore: "@player.YesterdayTotalScore", LastFiveGames: "@player.LastFiveTotalScore", AwayGames: "@player.AwayTotalScore", AwayPPA: "@player.AwayScorePerAB", HomeGames: "@player.HomeTotalScore", HomePPA: "@player.HomeScorePerAB", VersusLHP: "@player.VsLhpTotalScore", LhpPPA: "@player.VsLhpScorePerAB",  VersusRHP: "@player.VsLhpTotalScore", RhpPPA: "@player.VsRhpScorePerAB" });
        }

        return data;
    }

    $(function () {
        $("#responsive-panel").kendoResponsivePanel({
            breakpoint: 768,
            autoClose: false,
            orientation: "top"
        });

        $("#menu").kendoMenu();
        $(".textButton").kendoButton();

        $("#firstbasemen").kendoGrid({
            columns: [{
                title: "Name",
                field: "Name",
                encoded: true
            }, {
                title: "Team",
                field: "Team",
                encoded: true
            }, {
                title: "Yesterday Score",
                field: "YesterdayScore",
                encoded: true
            }, {
                title: "Last Five Games",
                field: "LastFiveGames",
                encoded: true
            }, {
                title: "Away Games",
                field: "AwayGames",
                encoded: true
            }, {
                title: "Away PPA",
                field: "AwayPPA",
                encoded: true
            }, {
                title: "Home Games",
                field: "HomeGames",
                encoded: true
            }, {
                title: "Home PPA",
                field: "HomePPA",
                encoded: true
            }, {
                title: "Versus LHP",
                field: "VersusLHP",
                encoded: true
            }, {
                title: "LHP PPA",
                field: "LhpPPA",
                encoded: true
            }, {
                title: "Versus RHP",
                field: "VersusRHP"
            }, {
                title: "RHP PPA",
                field: "RhpPPA",
                encoded: true
            }],
            pageable: {
                buttonCount: 10
            },
            sortable: true,
            filterable: true,
            messages: {
                noRecords: "No records available."
            },
            dataSource: {
                data: firstbaseData(),
                pageSize: 20,
                schema: {
                    model: {
                        fields: {
                            Name: {
                                type: "string"
                            },
                            Team: {
                                type: "string"
                            },
                            YesterdayScore: {
                                type: "number"
                            },
                            LastFiveGames: {
                                type: "number",
                                defaultValue: null
                            },
                            AwayGames: {
                                type: "number"
                            },
                            AwayPPA: {
                                type: "decimal"
                            },
                            HomeGames: {
                                type: "number",
                                defaultValue: null
                            },
                            HomePPA: {
                                type: "decimal"

                            },
                            VersusLHP: {
                                type: "number",
                                defaultValue: null
                            },
                            LhpPPA: {
                                type: "decimal"

                            },
                            VersusRHP: {
                                type: "number"
                            },
                            RhpPPA: {
                                type: "decimal"

                            }
                        }
                    }
                }
            }
        });
    });
</script>

<script>
    function secondbaseData() {
        var data = new Array();


        @foreach (var player in Model.SecondBasemen)
        {
            var playerName = player.FirstName + " " + player.LastName;

            @:data.push({ Name: "@playerName", Team: "@player.TeamName", YesterdayScore: "@player.YesterdayTotalScore", LastFiveGames: "@player.LastFiveTotalScore", AwayGames: "@player.AwayTotalScore", AwayPPA: "@player.AwayScorePerAB", HomeGames: "@player.HomeTotalScore", HomePPA: "@player.HomeScorePerAB", VersusLHP: "@player.VsLhpTotalScore", LhpPPA: "@player.VsLhpScorePerAB",  VersusRHP: "@player.VsLhpTotalScore", RhpPPA: "@player.VsRhpScorePerAB" });

        }

        return data;
    }

    $(function () {
        $("#responsive-panel").kendoResponsivePanel({
            breakpoint: 768,
            autoClose: false,
            orientation: "top"
        });

        $("#menu").kendoMenu();
        $(".textButton").kendoButton();

        $("#secondbasemen").kendoGrid({
            columns: [{
                title: "Name",
                field: "Name",
                encoded: true
            }, {
                title: "Team",
                field: "Team",
                encoded: true
            }, {
                title: "Yesterday Score",
                field: "YesterdayScore",
                encoded: true
            }, {
                title: "Last Five Games",
                field: "LastFiveGames",
                encoded: true
            }, {
                title: "Away Games",
                field: "AwayGames",
                encoded: true
            }, {
                title: "Away PPA",
                field: "AwayPPA",
                encoded: true
            }, {
                title: "Home Games",
                field: "HomeGames",
                encoded: true
            }, {
                title: "Home PPA",
                field: "HomePPA",
                encoded: true
            }, {
                title: "Versus LHP",
                field: "VersusLHP",
                encoded: true
            }, {
                title: "LHP PPA",
                field: "LhpPPA",
                encoded: true
            }, {
                title: "Versus RHP",
                field: "VersusRHP"
            }, {
                title: "RHP PPA",
                field: "RhpPPA",
                encoded: true
            }],
            pageable: {
                buttonCount: 10
            },
            sortable: true,
            filterable: true,
            messages: {
                noRecords: "No records available."
            },
            dataSource: {
                data: secondbaseData(),
                pageSize: 20,
                schema: {
                    model: {
                        fields: {
                            Name: {
                                type: "string"
                            },
                            Team: {
                                type: "string"
                            },
                            YesterdayScore: {
                                type: "number"
                            },
                            LastFiveGames: {
                                type: "number",
                                defaultValue: null
                            },
                            AwayGames: {
                                type: "number"
                            },
                            AwayPPA: {
                                type: "decimal"
                            },
                            HomeGames: {
                                type: "number",
                                defaultValue: null
                            },
                            HomePPA: {
                                type: "decimal"

                            },
                            VersusLHP: {
                                type: "number",
                                defaultValue: null
                            },
                            LhpPPA: {
                                type: "decimal"

                            },
                            VersusRHP: {
                                type: "number"
                            },
                            RhpPPA: {
                                type: "decimal"

                            }
                        }
                    }
                }
            }
        });
    });
</script>

<script>
    function thirdbaseData() {
        var data = new Array();


        @foreach (var player in Model.ThirdBasemen)
        {
            var playerName = player.FirstName + " " + player.LastName;

             @:data.push({ Name: "@playerName", Team: "@player.TeamName", YesterdayScore: "@player.YesterdayTotalScore", LastFiveGames: "@player.LastFiveTotalScore", AwayGames: "@player.AwayTotalScore", AwayPPA: "@player.AwayScorePerAB", HomeGames: "@player.HomeTotalScore", HomePPA: "@player.HomeScorePerAB", VersusLHP: "@player.VsLhpTotalScore", LhpPPA: "@player.VsLhpScorePerAB",  VersusRHP: "@player.VsLhpTotalScore", RhpPPA: "@player.VsRhpScorePerAB" });

        }

        return data;
    }

    $(function () {
        $("#responsive-panel").kendoResponsivePanel({
            breakpoint: 768,
            autoClose: false,
            orientation: "top"
        });

        $("#menu").kendoMenu();
        $(".textButton").kendoButton();

        $("#thirdbasemen").kendoGrid({
            columns: [{
                title: "Name",
                field: "Name",
                encoded: true
            }, {
                title: "Team",
                field: "Team",
                encoded: true
            }, {
                title: "Yesterday Score",
                field: "YesterdayScore",
                encoded: true
            }, {
                title: "Last Five Games",
                field: "LastFiveGames",
                encoded: true
            }, {
                title: "Away Games",
                field: "AwayGames",
                encoded: true
            }, {
                title: "Away PPA",
                field: "AwayPPA",
                encoded: true
            }, {
                title: "Home Games",
                field: "HomeGames",
                encoded: true
            }, {
                title: "Home PPA",
                field: "HomePPA",
                encoded: true
            }, {
                title: "Versus LHP",
                field: "VersusLHP",
                encoded: true
            }, {
                title: "LHP PPA",
                field: "LhpPPA",
                encoded: true
            }, {
                title: "Versus RHP",
                field: "VersusRHP"
            }, {
                title: "RHP PPA",
                field: "RhpPPA",
                encoded: true
            }],
            pageable: {
                buttonCount: 10
            },
            sortable: true,
            filterable: true,
            messages: {
                noRecords: "No records available."
            },
            dataSource: {
                data: thirdbaseData(),
                pageSize: 20,
                schema: {
                    model: {
                        fields: {
                            Name: {
                                type: "string"
                            },
                            Team: {
                                type: "string"
                            },
                            YesterdayScore: {
                                type: "number"
                            },
                            LastFiveGames: {
                                type: "number",
                                defaultValue: null
                            },
                            AwayGames: {
                                type: "number"
                            },
                            AwayPPA: {
                                type: "decimal"
                            },
                            HomeGames: {
                                type: "number",
                                defaultValue: null
                            },
                            HomePPA: {
                                type: "decimal"

                            },
                            VersusLHP: {
                                type: "number",
                                defaultValue: null
                            },
                            LhpPPA: {
                                type: "decimal"

                            },
                            VersusRHP: {
                                type: "number"
                            },
                            RhpPPA: {
                                type: "decimal"

                            }
                        }
                    }
                }
            }
        });
    });
</script>
<script>
    function shortstopData() {
        var data = new Array();


        @foreach (var player in Model.ShortStops)
        {
            var playerName = player.FirstName + " " + player.LastName;

             @:data.push({ Name: "@playerName", Team: "@player.TeamName", YesterdayScore: "@player.YesterdayTotalScore", LastFiveGames: "@player.LastFiveTotalScore", AwayGames: "@player.AwayTotalScore", AwayPPA: "@player.AwayScorePerAB", HomeGames: "@player.HomeTotalScore", HomePPA: "@player.HomeScorePerAB", VersusLHP: "@player.VsLhpTotalScore", LhpPPA: "@player.VsLhpScorePerAB",  VersusRHP: "@player.VsLhpTotalScore", RhpPPA: "@player.VsRhpScorePerAB" });

        }

        return data;
    }

    $(function () {
        $("#responsive-panel").kendoResponsivePanel({
            breakpoint: 768,
            autoClose: false,
            orientation: "top"
        });

        $("#menu").kendoMenu();
        $(".textButton").kendoButton();

        $("#shortstops").kendoGrid({
            columns: [{
                title: "Name",
                field: "Name",
                encoded: true
            }, {
                title: "Team",
                field: "Team",
                encoded: true
            }, {
                title: "Yesterday Score",
                field: "YesterdayScore",
                encoded: true
            }, {
                title: "Last Five Games",
                field: "LastFiveGames",
                encoded: true
            }, {
                title: "Away Games",
                field: "AwayGames",
                encoded: true
            }, {
                title: "Away PPA",
                field: "AwayPPA",
                encoded: true
            }, {
                title: "Home Games",
                field: "HomeGames",
                encoded: true
            }, {
                title: "Home PPA",
                field: "HomePPA",
                encoded: true
            }, {
                title: "Versus LHP",
                field: "VersusLHP",
                encoded: true
            }, {
                title: "LHP PPA",
                field: "LhpPPA",
                encoded: true
            }, {
                title: "Versus RHP",
                field: "VersusRHP"
            }, {
                title: "RHP PPA",
                field: "RhpPPA",
                encoded: true
            }],
            pageable: {
                buttonCount: 10
            },
            sortable: true,
            filterable: true,
            messages: {
                noRecords: "No records available."
            },
            dataSource: {
                data: shortstopData(),
                pageSize: 20,
                schema: {
                    model: {
                        fields: {
                            Name: {
                                type: "string"
                            },
                            Team: {
                                type: "string"
                            },
                            YesterdayScore: {
                                type: "number"
                            },
                            LastFiveGames: {
                                type: "number",
                                defaultValue: null
                            },
                            AwayGames: {
                                type: "number"
                            },
                            AwayPPA: {
                                type: "decimal"
                            },
                            HomeGames: {
                                type: "number",
                                defaultValue: null
                            },
                            HomePPA: {
                                type: "decimal"

                            },
                            VersusLHP: {
                                type: "number",
                                defaultValue: null
                            },
                            LhpPPA: {
                                type: "decimal"

                            },
                            VersusRHP: {
                                type: "number"
                            },
                            RhpPPA: {
                                type: "decimal"

                            }
                        }
                    }
                }
            }
        });
    });
</script>
<script>
    function outfielderData() {
        var data = new Array();


        @foreach (var player in Model.Outfielders)
        {
            var playerName = player.FirstName + " " + player.LastName;

             @:data.push({ Name: "@playerName", Team: "@player.TeamName", YesterdayScore: "@player.YesterdayTotalScore", LastFiveGames: "@player.LastFiveTotalScore", AwayGames: "@player.AwayTotalScore", AwayPPA: "@player.AwayScorePerAB", HomeGames: "@player.HomeTotalScore", HomePPA: "@player.HomeScorePerAB", VersusLHP: "@player.VsLhpTotalScore", LhpPPA: "@player.VsLhpScorePerAB",  VersusRHP: "@player.VsLhpTotalScore", RhpPPA: "@player.VsRhpScorePerAB" });

        }

        return data;
    }

    $(function () {
        $("#responsive-panel").kendoResponsivePanel({
            breakpoint: 768,
            autoClose: false,
            orientation: "top"
        });

        $("#menu").kendoMenu();
        $(".textButton").kendoButton();

        $("#outfielders").kendoGrid({
            columns: [{
                title: "Name",
                field: "Name",
                encoded: true
            }, {
                title: "Team",
                field: "Team",
                encoded: true
            }, {
                title: "Yesterday Score",
                field: "YesterdayScore",
                encoded: true
            }, {
                title: "Last Five Games",
                field: "LastFiveGames",
                encoded: true
            }, {
                title: "Away Games",
                field: "AwayGames",
                encoded: true
            }, {
                title: "Away PPA",
                field: "AwayPPA",
                encoded: true
            }, {
                title: "Home Games",
                field: "HomeGames",
                encoded: true
            }, {
                title: "Home PPA",
                field: "HomePPA",
                encoded: true
            }, {
                title: "Versus LHP",
                field: "VersusLHP",
                encoded: true
            }, {
                title: "LHP PPA",
                field: "LhpPPA",
                encoded: true
            }, {
                title: "Versus RHP",
                field: "VersusRHP"
            }, {
                title: "RHP PPA",
                field: "RhpPPA",
                encoded: true
            }],
            pageable: {
                buttonCount: 10
            },
            sortable: true,
            filterable: true,
            messages: {
                noRecords: "No records available."
            },
            dataSource: {
                data: outfielderData(),
                pageSize: 20,
                schema: {
                    model: {
                        fields: {
                            Name: {
                                type: "string"
                            },
                            Team: {
                                type: "string"
                            },
                            YesterdayScore: {
                                type: "number"
                            },
                            LastFiveGames: {
                                type: "number",
                                defaultValue: null
                            },
                            AwayGames: {
                                type: "number"
                            },
                            AwayPPA: {
                                type: "decimal"
                            },
                            HomeGames: {
                                type: "number",
                                defaultValue: null
                            },
                            HomePPA: {
                                type: "decimal"

                            },
                            VersusLHP: {
                                type: "number",
                                defaultValue: null
                            },
                            LhpPPA: {
                                type: "decimal"

                            },
                            VersusRHP: {
                                type: "number"
                            },
                            RhpPPA: {
                                type: "decimal"

                            }
                        }
                    }
                }
            }
        });
    });
</script>
<script>
    function pitcherData() {
        var data = new Array();


        @foreach (var player in Model.Pitchers)
        {
            var playerName = player.FirstName + " " + player.LastName;

             @:data.push({ Name: "@playerName", Team: "@player.TeamName", Matchup: "@player.MatchUp", LastGame: "@player.LastStartScore", LastThreeGames: "@player.LastThreeTotalScore", LastThreeSO: "@player.LastThreeStrikeouts", LastThreeHRA: "@player.LastThreeHRA", LastThreeRuns: "@player.LastThreeERA", LastThreeIP: "@player.LastThreeInningsPitched", AwayGames: "@player.AwayTotalScore", AwayHRA: "@player.AwayHomeRunAllowed", AwayPPIP: "@player.AwayPointsPerIP",  HomeGames: "@player.HomeTotalScore", HomeHRA: "@player.HomeHomeRunAllowed", HomePPIP: "@player.HomePointsPerIP" });

        }

        return data;
    }

    $(function () {
        $("#responsive-panel").kendoResponsivePanel({
            breakpoint: 768,
            autoClose: false,
            orientation: "top"
        });

        $("#menu").kendoMenu();
        $(".textButton").kendoButton();

        $("#pitcher").kendoGrid({
            columns: [{
                title: "Name",
                field: "Name",
                encoded: true
            }, {
                title: "Team",
                field: "Team",
                encoded: true
            }, {
                title: "Matchup",
                field: "Matchup",
                encoded: true
            }, {
                title: "Last Start",
                field: "LastGame",
                encoded: true
            }, {
                title: "Last Three Games",
                field: "LastThreeGames",
                encoded: true
            }, {
                title: "Last Three SO",
                field: "LastThreeSO",
                encoded: true
            }, {
                title: "Last Three HRA",
                field: "LastThreeHRA",
                encoded: true
            }, {
                title: "Last Three IP",
                field: "LastThreeIP",
                encoded: true
            }, {
                title: "Last Three Runs",
                field: "LastThreeRuns",
                encoded: true
            }, {
                title: "Away Games",
                field: "AwayGames",
                encoded: true
            }, {
                title: "Away HRA",
                field: "AwayHRA",
                encoded: true
            }, {
                title: "Away PPIP",
                field: "AwayPPIP",
                encoded: true
            }, {
                title: "Home Games",
                field: "HomeGames",
                encoded: true
            }, {
                title: "Home HRA",
                field: "HomeHRA",
                encoded: true
            }, {
                title: "Home PPIP",
                field: "HomePPIP",
                encoded: true
            }],
            pageable: {
                buttonCount: 10
            },
            sortable: true,
            filterable: true,
            messages: {
                noRecords: "No records available."
            },
            dataSource: {
                data: pitcherData(),
                pageSize: 20,
                schema: {
                    model: {
                        fields: {
                            Name: {
                                type: "string"
                            },
                            Team: {
                                type: "string"
                            },
                            Matchup: {
                                type: "string"
                            },
                            LastGame: {
                                type: "decimal"
                            },
                            LastThreeGames: {
                                type: "decimal"
                            },
                            LastThreeSO: {
                                type: "number"
                            },
                            LastThreeHRA: {
                                type: "number"
                            },
                            LastThreeRuns: {
                                type: "number"
                            },
                            LastThreeIP: {
                                type: "decimal"
                            },
                            AwayGames: {
                                type: "decimal"
                            },
                            AwayHRA: {
                                type: "number"
                            },
                            AwayPPIP: {
                                type: "decimal"
                            },
                            HomeGames: {
                                type: "decimal"
                            },
                            HomeHRA: {
                                type: "number"
                            },
                            HomePPIP: {
                                type: "decimal"
                            }
                        }
                    }
                }
            }
        });
    });
</script>
<script>
    function teamData() {
        var data = new Array();


        @foreach (var team in Model.Teams)
        {

             @:data.push({ Team: "@team.TeamName", Hits: "@team.Hits", Homeruns: "@team.HomeRuns", Runs: "@team.Runs", Strikeouts: "@team.StrikeOuts", TotalPoints: "@team.TotalPoints", PitchersUsed: "@team.GamesPlayedGauge", HitsAllowed: "@team.HitsAllowed", HomerunsAllowed: "@team.HomeRunsAllowed", RunsAllowed: "@team.RunsAllowed", PointsAllowed: "@team.PointsGivenUp", PointsPPU: "@team.PointsPerPitcherUsed" });

        }

        return data;
    }

    $(function () {
        $("#responsive-panel").kendoResponsivePanel({
            breakpoint: 768,
            autoClose: false,
            orientation: "top"
        });

        $("#menu").kendoMenu();
        $(".textButton").kendoButton();

        $("#teams").kendoGrid({
            columns: [{
                title: "Team",
                field: "Team",
                encoded: true
            }, {
                title: "Hits",
                field: "Hits",
                encoded: true
            }, {
                title: "Homeruns",
                field: "Homeruns",
                encoded: true
            }, {
                title: "Runs",
                field: "Runs",
                encoded: true
            }, {
                title: "Strikeouts",
                field: "Strikeouts",
                encoded: true
            }, {
                title: "Offensive Points",
                field: "TotalPoints",
                encoded: true
            }, {
                title: "Pitchers Used",
                field: "PitchersUsed",
                encoded: true
            }, {
                title: "HitsAllowed",
                field: "HitsAllowed",
                encoded: true
            }, {
                title: "Homeruns Allowed",
                field: "HomerunsAllowed",
                encoded: true
            }, {
                title: "Runs Allowed",
                field: "RunsAllowed",
                encoded: true
            }, {
                title: "Points Allowed",
                field: "PointsAllowed",
                encoded: true
            }, {
                title: "Points PPU",
                field: "PointsPPU",
                encoded: true
            }],
            pageable: {
                buttonCount: 10
            },
            sortable: true,
            filterable: true,
            messages: {
                noRecords: "No records available."
            },
            dataSource: {
                data: teamData(),
                pageSize: 30,
                schema: {
                    model: {
                        fields: {
                            Team: {
                                type: "string"
                            },
                            Hits: {
                                type: "number"
                            },
                            Homeruns: {
                                type: "number"
                            },
                            Runs: {
                                type: "number"
                            },
                            Strikeouts: {
                                type: "number"
                            },
                            TotalPoints: {
                                type: "number"
                            },
                            PitchersUsed: {
                                type: "number"
                            },
                            HitsAllowed: {
                                type: "number"
                            },
                            HomerunsAllowed: {
                                type: "number"
                            },
                            RunsAllowed: {
                                type: "number"
                            },
                            PointsAllowed: {
                                type: "number"
                            }, 
                            PointsPPU: {
                                type: "decimal"
                            }
                        }
                    }
                }
            }
        });
    });
</script>